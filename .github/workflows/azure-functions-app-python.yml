# This workflow will build a Python app and deploy it to an Azure Functions App on Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-python?pivots=python-mode-configuration
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Action: https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy azfunctions to Azure Function App

on:
  push:
    branches: ["develop"]
    paths: ["azfunctions/**"]

env:
  AZURE_FUNCTIONAPP_NAME: 'resumematchpro-dev-function-app'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'azfunctions'
  PYTHON_VERSION: '3.11'
  # Runtime settings
  ENABLE_ORYX_BUILD: 'true'
  SCM_DO_BUILD_DURING_DEPLOYMENT: 'true'
  PYTHON_ISOLATE_WORKER_DEPENDENCIES: '1'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/requirements.txt'

    - name: 'Validate Python Installation'
      run: |
        python --version
        if [ $? -ne 0 ]; then
          echo "Python installation failed"
          exit 1
        fi

    - name: 'Validate Project Structure'
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        if [ ! -f "requirements.txt" ]; then
          echo "requirements.txt not found"
          exit 1
        fi
        if [ ! -f "function_app.py" ]; then
          echo "function_app.py not found"
          exit 1
        fi
        if [ ! -f "host.json" ]; then
          echo "host.json not found"
          exit 1
        fi
        popd

    - name: 'Install Dependencies'
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: 'List Deployment Files'
      run: |
        echo "=== Function App Files ==="
        find './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}' -type f -not -path "*/\.*" -not -path "*/__pycache__/*"
        
        echo "=== Python Packages ==="
        ls -la './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/.python_packages/lib/site-packages'

    - name: 'Deploy to Azure Functions'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZFUNCTIONS_PUBLISHING_PROFILE }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true
        respect-funcignore: true

    - name: 'Post Deployment Check'
      if: success()
      run: |
        echo "Deployment completed successfully"
        echo "Function App URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net"
